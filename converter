<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Universal Converter</title>
    <style>
        body {
            font-family: 'SF Pro Display', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background-color: #f5f5f7;
            color: #1c1c1e;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            margin: 0;
            padding: 20px;
        }
        h1 {
            color: #1c1c1e;
            font-weight: 600;
            margin-bottom: 40px;
        }
        .converter {
            margin: 10px 0;
            width: 100%;
            max-width: 500px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            gap: 10px;
        }
        .unit-selector {
            display: flex;
            align-items: center;
            gap: 10px;
            width: 100%;
        }
        input, select, button {
            padding: 12px;
            border-radius: 12px;
            border: 1px solid #d1d1d6;
            background-color: #ffffff;
            color: #1c1c1e;
            font-size: 16px;
            outline: none;
        }
        select {
            flex: 1;
            min-width: 120px;
        }
        input {
            width: 100%;
        }
        input::placeholder {
            color: #a1a1a6;
        }
        button {
            background-color: #007aff;
            color: white;
            cursor: pointer;
            white-space: nowrap;
            transition: background-color 0.2s;
        }
        button:hover {
            background-color: #005ecb;
        }
        .swap-button {
            background-color: #34c759;
            padding: 8px 12px;
            font-size: 14px;
            min-width: auto;
        }
        .swap-button:hover {
            background-color: #32a852;
        }
        .from-to-text {
            font-weight: 500;
            color: #8e8e93;
            margin: 0 5px;
        }
        #result {
            font-size: 18px;
            font-weight: 600;
            margin-top: 20px;
            text-align: center;
            min-height: 25px;
        }
        .category-header {
            font-weight: 600;
            color: #8e8e93;
            background-color: #f2f2f7;
            pointer-events: none;
        }
    </style>
</head>
<body>
    <h1>Universal Converter</h1>
    
    <div class="converter">
        <div class="unit-selector">
            <select id="from-unit">
                <optgroup label="Temperature">
                    <option value="celsius">Celsius (째C)</option>
                    <option value="fahrenheit">Fahrenheit (째F)</option>
                    <option value="kelvin">Kelvin (K)</option>
                </optgroup>
                <optgroup label="Length">
                    <option value="millimeter">Millimeter (mm)</option>
                    <option value="centimeter">Centimeter (cm)</option>
                    <option value="meter">Meter (m)</option>
                    <option value="kilometer">Kilometer (km)</option>
                    <option value="inch">Inch (in)</option>
                    <option value="foot">Foot (ft)</option>
                    <option value="yard">Yard (yd)</option>
                    <option value="mile">Mile (mi)</option>
                </optgroup>
                <optgroup label="Weight">
                    <option value="milligram">Milligram (mg)</option>
                    <option value="gram">Gram (g)</option>
                    <option value="kilogram">Kilogram (kg)</option>
                    <option value="ounce">Ounce (oz)</option>
                    <option value="pound">Pound (lb)</option>
                    <option value="stone">Stone (st)</option>
                    <option value="ton">Ton (t)</option>
                </optgroup>
                <optgroup label="Volume">
                    <option value="milliliter">Milliliter (ml)</option>
                    <option value="liter">Liter (L)</option>
                    <option value="fluid-ounce">Fluid Ounce (fl oz)</option>
                    <option value="cup">Cup</option>
                    <option value="pint">Pint (pt)</option>
                    <option value="quart">Quart (qt)</option>
                    <option value="gallon">Gallon (gal)</option>
                </optgroup>
                <optgroup label="Currency">
                    <option value="usd">US Dollar (USD)</option>
                    <option value="brl">Brazilian Real (BRL)</option>
                </optgroup>
            </select>

            <select id="to-unit">
                <optgroup label="Temperature">
                    <option value="celsius">Celsius (째C)</option>
                    <option value="fahrenheit" selected>Fahrenheit (째F)</option>
                    <option value="kelvin">Kelvin (K)</option>
                </optgroup>
                <optgroup label="Length">
                    <option value="millimeter">Millimeter (mm)</option>
                    <option value="centimeter">Centimeter (cm)</option>
                    <option value="meter">Meter (m)</option>
                    <option value="kilometer">Kilometer (km)</option>
                    <option value="inch">Inch (in)</option>
                    <option value="foot">Foot (ft)</option>
                    <option value="yard">Yard (yd)</option>
                    <option value="mile">Mile (mi)</option>
                </optgroup>
                <optgroup label="Weight">
                    <option value="milligram">Milligram (mg)</option>
                    <option value="gram">Gram (g)</option>
                    <option value="kilogram">Kilogram (kg)</option>
                    <option value="ounce">Ounce (oz)</option>
                    <option value="pound">Pound (lb)</option>
                    <option value="stone">Stone (st)</option>
                    <option value="ton">Ton (t)</option>
                </optgroup>
                <optgroup label="Volume">
                    <option value="milliliter">Milliliter (ml)</option>
                    <option value="liter">Liter (L)</option>
                    <option value="fluid-ounce">Fluid Ounce (fl oz)</option>
                    <option value="cup">Cup</option>
                    <option value="pint">Pint (pt)</option>
                    <option value="quart">Quart (qt)</option>
                    <option value="gallon">Gallon (gal)</option>
                </optgroup>
                <optgroup label="Currency">
                    <option value="usd">US Dollar (USD)</option>
                    <option value="brl">Brazilian Real (BRL)</option>
                </optgroup>
            </select>
        </div>
    </div>
    
    <div class="converter">
        <input type="number" id="input-value" placeholder="Enter value to convert" step="any">
    </div>
    
    <div class="converter">
        <button onclick="swapUnits()">Invert</button>
    </div>
    
    <div class="converter">
        <p id="result"></p>
    </div>

    <script>
        // Conversion factors to base units
        const conversions = {
            // Temperature (to Celsius)
            celsius: { factor: 1, offset: 0, base: 'celsius' },
            fahrenheit: { factor: 5/9, offset: -32, base: 'celsius' },
            kelvin: { factor: 1, offset: -273.15, base: 'celsius' },
            
            // Length (to meters)
            millimeter: { factor: 0.001, base: 'meter' },
            centimeter: { factor: 0.01, base: 'meter' },
            meter: { factor: 1, base: 'meter' },
            kilometer: { factor: 1000, base: 'meter' },
            inch: { factor: 0.0254, base: 'meter' },
            foot: { factor: 0.3048, base: 'meter' },
            yard: { factor: 0.9144, base: 'meter' },
            mile: { factor: 1609.344, base: 'meter' },
            
            // Weight (to grams)
            milligram: { factor: 0.001, base: 'gram' },
            gram: { factor: 1, base: 'gram' },
            kilogram: { factor: 1000, base: 'gram' },
            ounce: { factor: 28.3495, base: 'gram' },
            pound: { factor: 453.592, base: 'gram' },
            stone: { factor: 6350.29, base: 'gram' },
            ton: { factor: 1000000, base: 'gram' },
            
            // Volume (to milliliters)
            milliliter: { factor: 1, base: 'milliliter' },
            liter: { factor: 1000, base: 'milliliter' },
            'fluid-ounce': { factor: 29.5735, base: 'milliliter' },
            cup: { factor: 236.588, base: 'milliliter' },
            pint: { factor: 473.176, base: 'milliliter' },
            quart: { factor: 946.353, base: 'milliliter' },
            gallon: { factor: 3785.41, base: 'milliliter' },
            
            // Currency (handled separately)
            usd: { base: 'currency' },
            brl: { base: 'currency' }
        };

        function swapUnits() {
            const fromUnit = document.getElementById('from-unit');
            const toUnit = document.getElementById('to-unit');
            
            const temp = fromUnit.value;
            fromUnit.value = toUnit.value;
            toUnit.value = temp;
            
            // Auto-convert if there's a value
            if (document.getElementById('input-value').value) {
                convert();
            }
        }

        function convertTemperature(value, fromUnit, toUnit) {
            // Convert to Celsius first
            let celsius;
            if (fromUnit === 'celsius') {
                celsius = value;
            } else if (fromUnit === 'fahrenheit') {
                celsius = (value - 32) * 5/9;
            } else if (fromUnit === 'kelvin') {
                celsius = value - 273.15;
            }
            
            // Convert from Celsius to target
            if (toUnit === 'celsius') {
                return celsius;
            } else if (toUnit === 'fahrenheit') {
                return (celsius * 9/5) + 32;
            } else if (toUnit === 'kelvin') {
                return celsius + 273.15;
            }
        }

        function convertStandard(value, fromUnit, toUnit) {
            const fromConv = conversions[fromUnit];
            const toConv = conversions[toUnit];
            
            // Convert to base unit
            const baseValue = value * fromConv.factor;
            
            // Convert from base unit to target
            return baseValue / toConv.factor;
        }

        async function convertCurrency(value, fromUnit, toUnit) {
            try {
                if (fromUnit === toUnit) return value;
                
                const response = await fetch('https://api.exchangerate-api.com/v4/latest/USD');
                const data = await response.json();
                
                let result;
                if (fromUnit === 'usd' && toUnit === 'brl') {
                    result = value * data.rates.BRL;
                } else if (fromUnit === 'brl' && toUnit === 'usd') {
                    result = value / data.rates.BRL;
                } else {
                    throw new Error('Unsupported currency pair');
                }
                
                return result;
            } catch (error) {
                throw new Error('Error fetching exchange rate');
            }
        }

        async function convert() {
            const fromUnit = document.getElementById('from-unit').value;
            const toUnit = document.getElementById('to-unit').value;
            const inputValue = parseFloat(document.getElementById('input-value').value);
            const resultElement = document.getElementById('result');

            if (isNaN(inputValue)) {
                resultElement.textContent = 'Please enter a valid number';
                return;
            }

            if (fromUnit === toUnit) {
                resultElement.textContent = `Result: ${inputValue.toFixed(2)} ${getUnitSymbol(toUnit)}`;
                return;
            }

            try {
                let result;
                const fromBase = conversions[fromUnit].base;
                const toBase = conversions[toUnit].base;
                
                if (fromBase !== toBase) {
                    resultElement.textContent = 'Cannot convert between different unit types';
                    return;
                }

                if (fromBase === 'celsius') {
                    result = convertTemperature(inputValue, fromUnit, toUnit);
                } else if (fromBase === 'currency') {
                    result = await convertCurrency(inputValue, fromUnit, toUnit);
                } else {
                    result = convertStandard(inputValue, fromUnit, toUnit);
                }

                const precision = result < 1 ? 4 : 2;
                resultElement.textContent = `Result: ${result.toFixed(precision)} ${getUnitSymbol(toUnit)}`;
                
            } catch (error) {
                resultElement.textContent = error.message;
            }
        }

        function getUnitSymbol(unit) {
            const symbols = {
                celsius: '째C', fahrenheit: '째F', kelvin: 'K',
                millimeter: 'mm', centimeter: 'cm', meter: 'm', kilometer: 'km',
                inch: 'in', foot: 'ft', yard: 'yd', mile: 'mi',
                milligram: 'mg', gram: 'g', kilogram: 'kg', ounce: 'oz', 
                pound: 'lb', stone: 'st', ton: 't',
                milliliter: 'ml', liter: 'L', 'fluid-ounce': 'fl oz',
                cup: 'cup', pint: 'pt', quart: 'qt', gallon: 'gal',
                usd: 'USD', brl: 'BRL'
            };
            return symbols[unit] || unit;
        }

        // Auto-convert when input changes
        document.getElementById('input-value').addEventListener('input', function() {
            if (this.value) {
                convert();
            } else {
                document.getElementById('result').textContent = '';
            }
        });

        // Auto-convert when units change
        document.getElementById('from-unit').addEventListener('change', function() {
            if (document.getElementById('input-value').value) {
                convert();
            }
        });

        document.getElementById('to-unit').addEventListener('change', function() {
            if (document.getElementById('input-value').value) {
                convert();
            }
        });

        // Enter key to convert
        document.getElementById('input-value').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                convert();
            }
        });
    </script>
</body>
</html>